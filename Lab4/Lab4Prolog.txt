listaNelem(_, 0, []).
listaNelem(L, N, [X|R]) :- N > 0, N1 is N - 1, member(X, L), listaNelem(L, N1, R).
listeNelem(L,N,LL) :- bagof(M, listaNelem(L,N,M), LL).

word(abalone,a,b,a,l,o,n,e).
word(abandon,a,b,a,n,d,o,n).
word(anagram,a,n,a,g,r,a,m).
word(connect,c,o,n,n,e,c,t).
word(elegant,e,l,e,g,a,n,t).
word(enhance,e,n,h,a,n,c,e).
crosswd(V1, V2, V3, H1, H2, H3) :- word(V1, _, A1, _, B1, _, C1, _),
    word(V2, _, A2, _, B2, _, C2, _),
    word(V3, _, A3, _, B3, _, C3, _),
    word(H1, _, A1, _, A2, _, A3, _),
    word(H2, _, B1, _, B2, _, B3, _),
    word(H3, _, C1, _, C2, _, C3, _).
crosswds(R) :- bagof([V1, V2, V3, H1, H2, H3], crosswd(V1, V2, V3, H1, H2, H3), R).

connected(1,2).
connected(3,4).
connected(5,6).
connected(7,8).
connected(9,10).
connected(12,13).
connected(13,14).
connected(15,16).
connected(17,18).
connected(19,20).
connected(4,1).
connected(6,3).
connected(4,7).
connected(6,11).
connected(14,9).
connected(11,15).
connected(16,12).
connected(14,17).
connected(16,19).
path(X, X, [X]).
path(X, Y, [X|L1]) :- connected(X, Z), path(Z, Y, L1).
pathc(X, Y) :- path(X, Y, _).
